<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Morven's Life</title><link>https://morven.life/en/posts/</link><description>Recent content in Posts on Morven's Life</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://morven.life/en/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy Istio Multcluster in IBM Cloud Private clusters using Gateway</title><link>https://morven.life/en/posts/istio-multicluster-with-gateway-in-icp/</link><pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate><guid>https://morven.life/en/posts/istio-multicluster-with-gateway-in-icp/</guid><description>Multicluster feature was introduced in the Istio 0.8 release, which allows the extension of the service mesh across multiple Kubernetes clusters. The primary goal of Istio multicluster is to manage a mesh composed of services running within more than one cluster but with all of the services running under a single administrative control. With Istio multicluster mesh, the location of the service deployment is transparent to the client and all services are the same.</description></item><item><title>Diving into Kubernetes MutatingAdmissionWebhook</title><link>https://morven.life/en/posts/diving-into-kubernetes-mutating-admission-webhook/</link><pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate><guid>https://morven.life/en/posts/diving-into-kubernetes-mutating-admission-webhook/</guid><description>Update: With the latest changes in the source code repository for this tutorial, I replaced the webhook server certificate created by the CertificateSigningRequest API and CA bundle patch process with self-generated CA and certificate, all the process will be done in the webhook server pod, so we wonâ€™t need the manual certificate creating and patch steps.
Admission controllers are powerful tools for intercepting requests to the Kubernetes API server prior to persistence of the object.</description></item></channel></rss>